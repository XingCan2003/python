#两数求和
#给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。
#你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。
#你可以按任意顺序返回答案。

class Solution(object):
    def twoSum(self,nums,target):
        for i in range(len(nums)): #使用嵌套循环
            x = target - nums[i] #先拿整数目标值依次减数组的元素，然后遍历数组剩下的元素，如果有符合的就返回并结束循环
            for j in range(i+1,len(nums)):
                if x == nums[j]:
                    return i,j
                    break
                else:
                    continue

class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        # 遍历列表
        for i in range(len(nums)):
            # 计算需要找到的下一个目标数字
            res = target-nums[i]
                # 遍历剩下的元素，查找是否存在该数字
            if res in nums[i+1:]:
                # 若存在，返回答案。这里由于是两数之和，可采用.index()方法
                # 获得目标元素在nums[i+1:]这个子数组中的索引后，还需加上i+1才是该元素在nums中的索引
                return [i, nums[i+1:].index(res)+i+1]


                    
